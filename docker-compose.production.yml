# Production Docker Compose for Crowd Due Dill
# AI Agent for Crowdfunding Regulation & Legal Compliance
# Using nginx-proxy + acme-companion for automatic SSL certificates


services:
  # Nginx Reverse Proxy with automatic SSL
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: crowd-due-dill-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    logging:
      driver: "local"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx-status.conf:/etc/nginx/conf.d/status.conf:ro
    networks:
      - default
      - proxy

  # Automatic SSL Certificate Management
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: crowd-due-dill-ssl
    restart: always
    environment:
      DEFAULT_EMAIL: ${SSL_EMAIL}  # Set this in your .env file
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
      - proxy

  # Crowd Due Dill Backend Application
  crowd-due-dill-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crowd-due-dill-backend
    restart: unless-stopped
    environment:
      # Application settings
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      
      # API settings
      - API_HOST=0.0.0.0
      - API_PORT=8001
      
      # Monitoring settings
      - ENABLE_METRICS=true
      - METRICS_PORT=8001
      
      # Automatic SSL/Proxy Configuration
      - VIRTUAL_HOST=${DOMAIN_NAME}
      - VIRTUAL_PORT=8001
      - LETSENCRYPT_HOST=${DOMAIN_NAME}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      
      # Auth0 settings (from environment)
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_MANAGEMENT_CLIENT_ID=${AUTH0_MANAGEMENT_CLIENT_ID}
      - AUTH0_MANAGEMENT_CLIENT_SECRET=${AUTH0_MANAGEMENT_CLIENT_SECRET}
      
      # Stripe settings (from environment)
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_MONTHLY_PRICE_ID=${STRIPE_MONTHLY_PRICE_ID}
      - STRIPE_LIFETIME_PRICE_ID=${STRIPE_LIFETIME_PRICE_ID}
      
      # AI API keys (from environment)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # Application URLs (auto-configured from DOMAIN_NAME)
      - FRONTEND_URL=https://${DOMAIN_NAME}
      - BACKEND_URL=https://${DOMAIN_NAME}/api
      - CORS_ORIGINS=https://${DOMAIN_NAME},https://www.${DOMAIN_NAME}
      
      # Database and storage paths
      - DATA_PATH=/app/data
      - CHROMA_DB_PATH=/app/data/chroma_db
      - SESSIONS_PATH=/app/data/sessions
      - QA_CACHE_PATH=/app/data/qa
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      
    volumes:
      # Persistent data storage
      - crowd_due_dill_data:/app/data
      - crowd_due_dill_logs:/app/logs
      
      # Configuration files
      - ./.env:/app/.env:ro
    
    networks:
      - default
      - proxy
      - monitoring  # Add connection to monitoring network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    depends_on:
      - nginx-proxy
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Blackbox Exporter for Health Monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: crowd-due-dill-blackbox
    restart: unless-stopped
    ports:
      - "9115:9115"  # Expose port 9115
    volumes:
      - ./monitoring/blackbox:/etc/blackbox_exporter:ro
    networks:
      - monitoring  # Connect to monitoring network
      - default
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9115/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

  # Nginx Prometheus Exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: crowd-due-dill-nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://crowd-due-dill-proxy:8081/nginx_status'
    networks:
      - monitoring
      - default
    depends_on:
      - nginx-proxy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9113/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

# Persistent volumes for data
volumes:
  conf:
    name: crowd_due_dill_nginx_conf
  vhost:
    name: crowd_due_dill_nginx_vhost
  html:
    name: crowd_due_dill_nginx_html
  certs:
    name: crowd_due_dill_ssl_certs
  acme:
    name: crowd_due_dill_acme
  crowd_due_dill_data:
    name: crowd_due_dill_data
  crowd_due_dill_logs:
    name: crowd_due_dill_logs

# Networks
networks:
  default:
    name: crowd_due_dill_network
  proxy:
    name: proxy
    external: true
  monitoring:
    name: crowd_due_dill_monitoring
    external: true 